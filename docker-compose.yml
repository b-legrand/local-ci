version: "3"
services:
  #
  # Nexus : code artifact and docker images repository
  #
  #nexus:
  #  image: sonatype/nexus3
  #  ports:
  #    - "8081:8081"
  #  environment:
  #    - VIRTUAL_HOST=nexus.local
  
  verdaccio:
    image: verdaccio/verdaccio:latest
    ports:
      - "4873:4873"
    volumes:
      - bin-data:/verdaccio
    environment:
      - VIRTUAL_HOST=verdaccio.local

  #
  # Sonar : static code analysis
  #
  sonar:
    image: sonarqube
    ports:
      - 9001:9000
      - 9092:9092
    environment:
      - VIRTUAL_HOST=sonar.local
      - VIRTUAL_PORT=9001
      - sonar.jdbc.username=sonarqube
      - sonar.jdbc.password=sonarqube
      - sonar.jdbc.url=jdbc:postgresql://postgres:5432/sonarqube 
    depends_on:
      - postgres
  #
  # Jenkins: Continuous Integration Platform
  #
  jenkins:
    image: jenkinsci/blueocean
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      - VIRTUAL_HOST=jenkins.local
      - VIRTUAL_PORT=8080
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
  #
  # Gitea : git source code repository
  #
  gitea:
    image: gitea/gitea
    volumes:
      - ./data/gitea:/data/gitea
      - ssh-data:/data/ssh
      - ./data/gitea/git:/data/git
    ports:
      - "8082:3000"
      - "222:22"
    depends_on:
      - postgres
    restart: always
    privileged: true
    environment:
      - VIRTUAL_HOST=gitea.local
      - VIRTUAL_PORT=3000
      - SSH_HOST=gitea.local
      - SSH_PORT=222
      - HOST=gitea.local
      - USER_UID=1000
      - USER_GID=1000
      - DB_TYPE=postgres
      - DB_HOST=postgres:5432
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=gitea
    links:
      - postgres
     
  #
  # Postgres database
  #
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./data/pg/entrypoint:/docker-entrypoint-initdb.d
  #
  # DB admin interface
  #
  adminer:
    image: adminer
    restart: always
    ports:
      - 8083:8080
    environment:
      - VIRTUAL_HOST=adminer.local
    depends_on:
      - postgres
  # reverse proxy
  nginx:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
  www:
    image: nginx
    volumes: 
      - ./data/www/:/usr/share/nginx/html
    environment:
      - VIRTUAL_HOST=www.local
      
volumes:
  pg-data:
    driver: local
  ssh-data:
    driver: local
  jenkins-data:
    driver: local
  bin-data:
    driver: local
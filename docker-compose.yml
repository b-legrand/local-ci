version: "3"
services:
  #
  # Verdaccio : artifact repository
  #
  verdaccio:
    image: verdaccio/verdaccio
    ports:
      - "4873:4873"
    environment:
      - VIRTUAL_HOST=verdaccio.local
  #
  # Sonar : static code analysis
  #
  sonar:
    image: sonarqube
    ports:
      - 9000:9000
      - 9092:9092
    environment:
      - VIRTUAL_HOST=sonar.local
      - VIRTUAL_PORT=9000
      - sonar.jdbc.username=postgres
      - sonar.jdbc.password=example
      - sonar.jdbc.url=jdbc:postgresql://postgres:5432/sonarqube 
    depends_on:
      - postgres
  #
  # Jenkins: Continuous Integration Platform
  #
  jenkins:
    image: jenkinsci/blueocean
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      - VIRTUAL_HOST=jenkins.local
      - VIRTUAL_PORT=8080
    volumes:
      - ./data/jenkins:/var/jenkins_home #Remember that, the tmp directory is designed to be wiped on system reboot.
      - /var/run/docker.sock:/var/run/docker.sock
  #
  # Gitea : git source code repository
  #
  gitea:
    image: gitea/gitea:1.3.2
    volumes:
      - ./data/gitea:/data
    ports:
      - "3000:3000"
      - "222:22"
    depends_on:
      - postgres
    restart: always
    environment:
      - VIRTUAL_HOST=gitea.local
      - VIRTUAL_PORT=3000
      - SSH_HOST=gitea.local
      - SSH_PORT=222
      - HOST=gitea.local
      - USER_UID=1000
      - USER_GID=1000
      - DB_TYPE=postgres
      - DB_HOST=postgres:5432
      - DB_NAME=gitea
      - DB_USER=postgres
      - DB_PASSWD=example
    links:
      - postgres
     
  #
  # Postgres database
  #
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_MULTIPLE_DATABASES: gitea, sonarqube
    volumes:
      - ./data/pg/:/var/lib/postgresql/data
      - ./data/db/:/docker-entrypoint-initdb.d
  #
  # DB admin interface
  #
  adminer:
    image: adminer
    restart: always
    ports:
      - 8083:8080
    environment:
      - VIRTUAL_HOST=adminer.local
    depends_on:
      - postgres
  # reverse proxy
  nginx:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
  www:
    image: nginx
    volumes: 
      - ./data/www/:/usr/share/nginx/html
    environment:
      - VIRTUAL_HOST=www.local